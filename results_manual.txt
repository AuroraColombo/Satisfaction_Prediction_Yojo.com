82.88: n_estimators=37, criterion='gini',
                               max_depth=60, random_state=0, min_samples_split=100,
                               min_samples_leaf=1, max_leaf_nodes=None, max_samples=1.0, max_features=0.5,
                               min_impurity_decrease=0.0, ccp_alpha=0.0, class_weight='balanced', bootstrap=False)


82.94: n_estimators=37, criterion='gini',
                               max_depth=30, random_state=0, min_samples_split=100,
                               min_samples_leaf=1, max_leaf_nodes=None, max_samples=1.0, max_features=0.5,
                               min_impurity_decrease=0.0, ccp_alpha=0.0, class_weight='balanced', bootstrap=False


82.9: n_estimators=37, criterion='gini',
                               max_depth=29, random_state=0, min_samples_split=100,
                               min_samples_leaf=1, max_leaf_nodes=None, max_samples=1.0, max_features=0.5,
                               min_impurity_decrease=0.0, ccp_alpha=0.0, class_weight='balanced', bootstrap=False

83.52: n_estimators=37, criterion='gini',
                               max_depth=29, random_state=0, min_samples_split=38,
                               min_samples_leaf=1, max_leaf_nodes=None, max_samples=1.0, max_features=0.5,
                               min_impurity_decrease=0.0, ccp_alpha=0.0, class_weight='balanced', bootstrap=False


Best HetEns

HetEns con mlp, rf, dt e svm con threshold = 2, cv=5 83.62 +- 0.59

self.mlp = MLPClassifier(activation='tanh', alpha=0.0001, batch_size=250, hidden_layer_sizes=14,
                                 learning_rate='constant', max_iter=1000, solver='adam', tol=0.001)
        self.rf = RandomForestClassifier(n_estimators=37, criterion='gini',
                                         max_depth=29, random_state=0, min_samples_split=38,
                                         min_samples_leaf=1, max_leaf_nodes=None, max_samples=0.1, max_features=0.49,
                                         min_impurity_decrease=0.0, ccp_alpha=0.0, class_weight='balanced',
                                         bootstrap=False)
        self.dt = DecisionTreeClassifier(class_weight='balanced', criterion='gini', max_depth=15, min_samples_leaf=7,
                                         min_samples_split=50)


        self.svm = SVC(C=0.001, degree=3, gamma=1.0, kernel='poly')


-----------------------------------------------------------------------------------------------




